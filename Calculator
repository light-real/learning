#include<iostream>
using namespace std;
#include<string> 

class AbstractCalculator{
public:
	virtual int calculate(){
		return 0;
	}
	int a;
	int b;
};

class AddCalculator:public AbstractCalculator {
	int calculate(){
		return a+b;
	}
};

class SubCalculator:public AbstractCalculator{
	int calculate(){
		return a-b;
	}	
};

void test01(){
	//多态使用条件
	//父类指针或者引用指向子类对象 
	AbstractCalculator *ans = new AddCalculator;  
	ans->a = 10;
	ans->b = 10;
	cout<<ans->a<<"+"<<ans->b<<"="<<ans->calculate()<<endl;
	delete ans; // new出来的对象放在堆区，需要手动删除 
}
int main(){
	test01();
	return 0;
} 
